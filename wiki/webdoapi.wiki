#summary API Documentation for webdo

= `webdo` =

== Anatomy of test suites and tests ==

A webdo test suite is a single ruby (`.rb`) file that contains one or more `test` method calls.

=== the `test` method ===

{{{
test "Name your test" do
  # test code
end
}}}

The test method performs a webdo test when run.  Your test code is usually made up of one or more `web do` calls, followed by a number of assertions.

== `web do` commands ==

The `web do`...`end` block allows you to specify a web request to make.  For example, the following code will make a GET request on `http://www.google.co.uk/search?q=webdo`:

{{{
  web do
    get
    url "http://www.google.co.uk/search"
    with_param "q", "webdo"
  end
}}}

All requests must have at least a `url`.

=== Methods ===

You can use any one of the four main RESTful HTTP methods:

  * `get`
  * `put`
  * `post`
  * `delete`

The default is `get`.

=== `url` ===

{{{
url "http://www.google.co.uk/search"
}}}

The `url` method specifies the URL (protocol, domain, path and filename) of the request to make.  Query string parameters are included with the `with_param` method.

=== `with_param` ===

{{{
with_param "q", "webdo"
}}}

The `with_param` method specifies a parameter to use when making the request.  `get` and `delete` requests will include these parameters in the querystring (after the `?` in the URL), whereas `post` and `put` requests will send it in the request body.

=== `with_header` ===

{{{
with_header "Accept", "application/json"
}}}

The `with_header` parameter specifies a header to use when making the request.  For a full list of available options, see http://en.wikipedia.org/wiki/List_of_HTTP_header_fields

== Assertion methods ===